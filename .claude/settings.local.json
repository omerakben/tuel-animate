{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(django-admin startproject:*)",
      "Bash(python manage.py startapp:*)",
      "Bash(pnpm create:*)",
      "Bash(git init:*)",
      "Bash(git checkout:*)",
      "Bash(uv pip install:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm build:*)",
      "Bash(python manage.py:*)",
      "Bash(pnpm uninstall:*)",
      "Bash(npx shadcn:*)",
      "Bash(pytest:*)",
      "Bash(pnpm test:*)",
      "Bash(uv pip search:*)",
      "Bash(grep:*)",
      "Bash(pkill:*)",
      "Bash(cp:*)",
      "Bash(npm run build:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm dlx shadcn@latest add:*)",
      "Bash(touch:*)",
      "Bash(mv:*)",
      "Bash(curl:*)",
      "Bash(pip install:*)",
      "Bash(python -m pytest core/tests/test_factories.py -v)",
      "Bash(python -m pytest core/tests/test_factories.py::TestFactories::test_user_factory -v --no-cov)",
      "Bash(python -m pytest --version)",
      "Bash(python -m pytest -c pytest_simple.ini core/tests/test_factories.py::TestFactories::test_user_factory -v)",
      "Bash(python -m pytest core/tests/test_factories.py -v --no-cov)",
      "Bash(uv run:*)",
      "Bash(npm run lint)",
      "Bash(npm run type-check:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(mcp list:*)",
      "mcp__Context7__resolve-library-id",
      "mcp__Context7__get-library-docs",
      "Bash(python:*)",
      "Bash(export DJANGO_SETTINGS_MODULE=config.settings)",
      "Bash(black:*)",
      "Bash(flake8:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm type-check:*)",
      "Bash(rm:*)",
      "Bash(sed:*)",
      "Bash(pip freeze)",
      "Bash(pnpm update:*)",
      "Bash(pnpm approve-builds:*)",
      "Bash(pnpm dev:*)",
      "Bash(chmod:*)",
      "Bash(NEXT_DISABLE_ESLINT_LINT=true pnpm build)",
      "Bash(true)",
      "Bash(mv:*)",
      "Bash(true)",
      "Bash(python manage.py test:*)",
      "Bash(bash:*)",
      "Bash(.venv/bin/pip install:*)",
      "Bash(.venv/bin/python:*)",
      "Bash(.venv/bin/pip install:*)",
      "Bash(.venv/bin/python -m pytest --version)",
      "Bash(.venv/bin/python -m pytest --cov=. --cov-report=term-missing --cov-report=html --no-header -q)",
      "Bash(.venv/bin/python -m pytest -c pytest_simple.ini --cov=core --cov-report=term-missing -q)",
      "Bash(PYTHONPATH=/Users/omersmac/Desktop/Repos/interactive-learning-platform/interactive-learning-platform-backend:$PYTHONPATH .venv/bin/python -m pytest -c pytest_simple.ini --cov=core --cov-report=term-missing -q -k \"not test_create_session\")",
      "Bash(./scripts/start-backend.sh:*)",
      "Bash(PYTHONPATH=/Users/omersmac/Desktop/Repos/interactive-learning-platform/interactive-learning-platform-backend:$PYTHONPATH .venv/bin/python -m pytest -c pytest_simple.ini --cov=core --cov-report=term-missing -q)",
      "Bash(docker-compose:*)",
      "Bash(.venv/bin/python -m pytest core/tests/test_models.py -v)",
      "Bash(.venv/bin/python -m pytest -c pytest_test.ini -q)",
      "Bash(.venv/bin/python -m pytest core/tests/test_authentication.py -v)",
      "Bash(./start_server.sh:*)",
      "Bash(.venv/bin/python -m pytest -c pytest_test.ini core/tests/test_authentication.py -v)",
      "Bash(.venv/bin/python -m pytest -c pytest_test.ini core/tests/test_models.py core/tests/test_views.py core/tests/test_progress_views.py -q)",
      "Bash(rm:*)",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(uv pip install:*)",
      "Bash(python manage.py:*)",
      "Bash(pnpm dev:*)",
      "Bash(grep:*)",
      "Bash(redis-cli:*)",
      "Bash(brew install:*)",
      "Bash(brew services start:*)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(touch:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(docker compose:*)",
      "Bash(source:*)",
      "Bash(python manage.py:*)",
      "Bash(python -m black:*)",
      "Bash(flake8:*)",
      "Bash(mv:*)",
      "Bash(pip install:*)",
      "Bash(pip --version)",
      "Bash(.venv/bin/pip install:*)",
      "Bash(docker-compose exec backend pytest:*)",
      "Bash(docker-compose exec:*)",
      "Bash(curl:*)",
      "Bash(python -m pytest tutor_agent/tests/test_terminal_api.py::TerminalSessionViewSetTestCase::test_list_sessions -xvs)",
      "Bash(python -m pytest -c pytest_simple.ini tutor_agent/tests/test_terminal_api.py -xvs)",
      "Bash(pip freeze)",
      "Bash(pkill:*)",
      "Bash(python -m pip install:*)",
      "Bash(python -m pytest tutor_agent/tests/test_terminal_api.py::TerminalSessionViewSetTestCase -k \"test_list_sessions or test_poll_output\" -xvs)",
      "Bash(python -m pytest tutor_agent/tests/test_terminal_api.py::TerminalSessionViewSetTestCase::test_poll_output -xvs --tb=short)",
      "Bash(python -m pytest tutor_agent/tests/test_terminal_api.py::TerminalSessionViewSetTestCase::test_poll_output -xvs --tb=no)",
      "Bash(python -m pytest tutor_agent/tests/test_terminal_api.py::TerminalSessionViewSetTestCase::test_poll_output -xvs)",
      "Bash(python -m pytest tutor_agent/tests/test_terminal_api.py -xvs -k \"not Authentication\")",
      "Bash(python -m pytest tutor_agent/tests/test_terminal_api.py::TerminalSessionViewSetTestCase -k \"list_sessions or poll_output\" -xvs)",
      "Bash(black:*)",
      "Bash(docker-compose:*)",
      "Bash(redis-cli:*)",
      "Bash(python:*)",
      "Bash(./start_servers.sh)",
      "Bash(/Users/omersmac/Desktop/Repos/interactive-learning-platform/interactive-learning-platform-backend/.venv/bin/pip install django-redis)",
      "Bash(.venv/bin/pip3 install:*)",
      "Bash(tree:*)",
      "Bash(./start-backend.sh:*)",
      "Bash(./scripts/dev-start.sh:*)",
      "Bash(export DJANGO_SETTINGS_MODULE=backend.settings)",
      "Bash(npx eslint:*)",
      "Bash(pip uninstall:*)",
      "Bash(cat:*)",
      "Bash(brew list:*)",
      "Bash(export:*)",
      "Bash(uv:*)",
      "Bash(~/.local/bin/uv venv:*)",
      "Bash(~/.local/bin/uv pip install:*)",
      "Bash(npm uninstall:*)",
      "Bash(diff:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(find:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(pkill:*)",
      "Bash(DEBUG=True python manage.py runserver)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(./start-backend.sh:*)",
      "Bash(npm audit:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(chmod:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__filesystem__read_file",
      "mcp__filesystem__edit_file",
      "mcp__filesystem__write_file",
      "Bash(kill:*)",
      "mcp__filesystem__list_directory",
      "Bash(alembic upgrade:*)",
      "Bash(sqlite3:*)",
      "Bash(python test:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(true)",
      "Bash(chmod:*)",
      "Bash(grep:*)",
      "Bash(test:*)",
      "Bash(tree:*)",
      "Bash(curl:*)",
      "Bash(git checkout:*)",
      "Bash(git reset:*)",
      "WebFetch(domain:docs.firecrawl.dev)",
      "WebFetch(domain:platform.openai.com)",
      "Bash(python:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(npx next lint:*)",
      "Bash(git merge:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git stash:*)",
      "Bash(npm run:*)",
      "Bash(git push:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(npx tsc:*)",
      "Bash(npx -p typescript tsc:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(curl:*)",
      "Bash(lsof:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "filesystem",
    "memory",
    "puppeteer",
    "google-cloud-mcp",
    "Context7",
    "playwright",
    "supabase",
    "sequential-thinking",
    "github",
    "stripe"
  ]
}